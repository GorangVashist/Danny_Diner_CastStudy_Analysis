/* --------------------
   Case Study Questions
   --------------------*/
/*
-- 1. What is the total amount each customer spent at the restaurant?
-- 2. How many days has each customer visited the restaurant?
-- 3. What was the first item from the menu purchased by each customer?
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
-- 5. Which item was the most popular for each customer?
-- 6. Which item was purchased first by the customer after they became a member?
-- 7. Which item was purchased just before the customer became a member?
-- 8. What is the total items and amount spent for each member before they became a member?
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
*/


/*
Q1)

SELECT customer_id,sum(price) as total_sales from dannys_diner.sales s
join dannys_diner.menu m
ON
s.product_id=m.product_id
group by 1
order by 2 desc
*/

/*
Q2)
SELECT customer_id ,count( DISTINCT order_date) as number_of_days
from dannys_diner.sales
group by customer_id
*/


/*
Q3)
WITH CTE 
AS(
SELECT customer_id, s.product_id,order_date,product_name,
	DENSE_RANK() OVER(PARTITION BY customer_id  ORDER BY order_date) as rnk
from dannys_diner.sales s
join dannys_diner.menu m
ON
s.product_id=m.product_id
)

SELECT customer_id, product_name from cte
where rnk=1
group by 1,2
*/


/* Q4)
SELECT product_name ,COUNT(s.product_id) as mostly_purchased_item from dannys_diner.sales s
join dannys_diner.menu m
ON
s.product_id=m.product_id
group by 1
order by 2 desc
limit 1
*/ 

/*Q5)
WITH CTE AS
(
SELECT customer_id,product_name,count(s.product_id), 
DENSE_RANK() OVER(PARTITION BY customer_id order by count(s.product_id) desc ) as rnk
from dannys_diner.sales s 
join dannys_diner.menu m
ON
m.product_id=s.product_id
GROUP BY 1,2
)

SELECT customer_id,product_name AS popular_dish_of_customer from cte where rnk=1
*/


/*
Q6)
WITH CTE 
AS(
SELECT s.customer_id, s.product_id,order_date,product_name,
	DENSE_RANK() OVER(PARTITION BY s.customer_id  ORDER BY order_date) as rnk
from dannys_diner.sales s
join dannys_diner.menu m
ON
s.product_id=m.product_id
JOIN dannys_diner.members me
ON
me.customer_id=s.customer_id
WHERE s.order_date>=me.join_date

)

SELECT customer_id, product_name from cte
where rnk=1
group by 1,2
*/

/*
Q7)
WITH CTE 
AS(
SELECT s.customer_id, s.product_id,order_date,product_name,
	DENSE_RANK() OVER(PARTITION BY s.customer_id  ORDER BY order_date) as rnk
from dannys_diner.sales s
join dannys_diner.menu m
ON
s.product_id=m.product_id
JOIN dannys_diner.members me
ON
me.customer_id=s.customer_id
WHERE s.order_date<me.join_date

)

SELECT customer_id, product_name from cte
where rnk=1
group by 1,2
*/

/*
Q8)
SELECT s.customer_id as sid,SUM(price) as total_price,COUNT(DISTINCT product_name) as no_of_item
FROM dannys_diner.sales s
JOIN dannys_diner.menu m
ON
s.product_id=m.product_id
JOIN dannys_diner.members me
ON
me.customer_id=s.customer_id
WHERE s.order_date<me.join_date
GROUP BY 1
*/


/* Q9
WITH CTE AS
(
SELECT customer_id,price,case when product_name='sushi' then price*20 else price*10 end as points
FROM dannys_diner.sales s
join
dannys_diner.menu m
ON
s.product_id=m.product_id
order by 1
)

SELECT customer_id, SUM(points) as total_points from cte
group by 1
*/



/*
Q10

SELECT d.customer_id, s.order_date, d.join_date, 
 d.valid_date, d.last_date, m.product_name, m.price,
 SUM(CASE
  WHEN m.product_name = 'sushi' THEN 2 * 10 * m.price
  WHEN s.order_date BETWEEN d.join_date AND d.valid_date THEN 2 * 10 * m.price
  ELSE 10 * m.price
  END) AS points
FROM dates_cte AS d
JOIN sales AS s
 ON d.customer_id = s.customer_id
JOIN menu AS m
 ON s.product_id = m.product_id
WHERE s.order_date < d.last_date
GROUP BY d.customer_id, s.order_date, d.join_date, d.valid_date, d.last_date, m.product_name, m.price

*/


